Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\Rita_s_Dolls_House_2.production.sym \
  --cmf=dist/default/production\Rita_s_Dolls_House_2.production.cmf -z \
  -Q16F722A -oC:\Users\IT003795\AppData\Local\Temp\s5eg.2 \
  -Mdist/default/production/Rita_s_Dolls_House_2.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=02Bh-06fh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\IT003795\AppData\Local\Temp\s5eg.obj \
  dist/default/production\Rita_s_Dolls_House_2.production.obj 

Object code version is 3.11

Machine type is 16F722A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\IT003795\AppData\Local\Temp\s5eg.obj
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Rita_s_Dolls_House_2.production.obj
                cinit                                11       11        C        8       0
                intentry                              4        4        C        8       0
                text9                                1D       1D       D5        8       0
                text8                               23F      23F        8      3CA       0
                text7                               1FE      1FE       18      3CA       0
                text6                               19B      19B       26        8       0
                text5                               22D      22D       12      3CA       0
                text4                               1E5      1E5       19      3CA       0
                text3                               216      216       17      3CA       0
                text2                               166      166       35        8       0
                text1                                F2       F2       74        8       0
                maintext                            247      247        4      3CA       0
                cstackBANK0                          20       20        6       20       1
                cstackCOMMON                         70       70        5       70       1
                bssBANK0                             26       26        5       20       1
                bssCOMMON                            75       75        4       70       1
                bitbssCOMMON                        3C8       79        1       70       1     8
                strings                             1C1      1C1       24      382       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11        C         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text9                                1D       1D       D5         0
                text8                               23F      23F        8         0
                text7                               1FE      1FE       18         0
                text6                               19B      19B       26         0
                text5                               22D      22D       12         0
                text4                               1E5      1E5       19         0
                text3                               216      216       17         0
                text2                               166      166       35         0
                text1                                F2       F2       74         0
                maintext                            247      247        4         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             1C1      1C1       24         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        5         1
                bssCOMMON                            75       75        4         1
                bitbssCOMMON                        3C8       79        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20        6         1
                bssBANK0                             26       26        5         1

        CLASS   BANK1          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   BANK3          

        CLASS   BANK2          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0001BD  0001C1         8       0  CODE        2
                cstackBANK0                    000020  00000B  00002B        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                strings                        0001C1  000024  0001E5       382       0  STRING      2
                text4                          0001E5  000066  00024B       3CA       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            002B-006F             45           1
        BANK1            00A0-00BF             20           1
        CODE             0001-0003              3           2
                         024B-07FF            5B5
        COMMON           007A-007D              4           1
        CONST            0001-0003              3           2
                         024B-07FF            100
        ENTRY            0001-0003              3           2
                         024B-07FF            100
        IDLOC            2000-2003              4           2
        RAM              002B-006F             45           1
                         00A0-00BF             20
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-016F             70           1
        SFR3             0180-01EF             70           1
        STACK            002B-006F             45           1
        STRCODE          0001-0003              3           2
                         024B-07FF            5B5
        STRING           0001-0003              3           2
                         024B-07FF            100

                                  Symbol Table

?_printf                 cstackCOMMON 0070
ISR@command              bssCOMMON    0075
ISR@command_counter      bssBANK0     0028
ISR@command_receiving    bitbssCOMMON 03C8
ISR@rxdata               bssCOMMON    0076
_ADCON0bits              (abs)        001F
_ANSELA                  (abs)        0185
_ANSELB                  (abs)        0186
_CCP1CONbits             (abs)        0017
_CCP2CONbits             (abs)        001D
_INTCONbits              (abs)        000B
_ISR                     text9        001D
_OPTION_REGbits          (abs)        0081
_OSCCONbits              (abs)        0090
_PORTA                   (abs)        0005
_PORTAbits               (abs)        0005
_PORTCbits               (abs)        0007
_RCIE                    (abs)        0465
_RCIF                    (abs)        0065
_RCREG                   (abs)        001A
_RCSTAbits               (abs)        0018
_SPBRG                   (abs)        0099
_T0IE                    (abs)        005D
_T0IF                    (abs)        005A
_TMR0                    (abs)        0001
_TRISA                   (abs)        0085
_TRISB                   (abs)        0086
_TRISCbits               (abs)        0087
_TXIF                    (abs)        0064
_TXREG                   (abs)        0019
_TXSTAbits               (abs)        0098
_WPUB                    (abs)        0095
__CFG_BOREN$ON           (abs)        0000
__CFG_BORV$19            (abs)        0000
__CFG_CP$OFF             (abs)        0000
__CFG_FOSC$INTOSCIO      (abs)        0000
__CFG_MCLRE$ON           (abs)        0000
__CFG_PLLEN$ON           (abs)        0000
__CFG_PWRTE$ON           (abs)        0000
__CFG_VCAPEN$RA0         (abs)        0000
__CFG_WDTE$OFF           (abs)        0000
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbitbssCOMMON          bitbssCOMMON 0000
__HbssBANK0              bssBANK0     0000
__HbssCOMMON             bssCOMMON    0000
__Hcinit                 cinit        001D
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2009
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0011
__Hfunctab               functab      0000
__Hidloc                 idloc        0000
__Hinit                  init         0010
__Hintentry              intentry     0010
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0001
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        2009
__Hspace_1               (abs)        03C9
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbitbssCOMMON          bitbssCOMMON 0000
__LbssBANK0              bssBANK0     0000
__LbssCOMMON             bssCOMMON    0000
__Lcinit                 cinit        0011
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       2007
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0010
__Lfunctab               functab      0000
__Lidloc                 idloc        0000
__Linit                  init         0010
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        2009
__S1                     (abs)        007A
__S2                     (abs)        0000
___int_sp                stack        0000
___latbits               (abs)        0000
___sp                    stack        0000
__end_of_ISR             text9        00F2
__end_of__initialization cinit        001B
__end_of__stringtab      strings      01C7
__end_of_check_elevator  text6        01C1
__end_of_main            maintext     024B
__end_of_motor_down      text4        01FE
__end_of_motor_stop      text5        023F
__end_of_motor_up        text3        022D
__end_of_move_elevator   text2        019B
__end_of_printf          text7        0216
__end_of_putch           text8        0247
__end_of_system_init     text1        0166
__initialization         cinit        0011
__pbitbssCOMMON          bitbssCOMMON 03C8
__pbssBANK0              bssBANK0     0026
__pbssCOMMON             bssCOMMON    0075
__pcstackBANK0           cstackBANK0  0020
__pcstackCOMMON          cstackCOMMON 0070
__pintentry              intentry     0004
__pmaintext              maintext     0247
__pstrings               strings      01C1
__ptext1                 text1        00F2
__ptext2                 text2        0166
__ptext3                 text3        0216
__ptext4                 text4        01E5
__ptext5                 text5        022D
__ptext6                 text6        019B
__ptext7                 text7        01FE
__ptext8                 text8        023F
__ptext9                 text9        001D
__size_of_ISR            (abs)        0000
__size_of_check_elevator (abs)        0000
__size_of_main           (abs)        0000
__size_of_motor_down     (abs)        0000
__size_of_motor_stop     (abs)        0000
__size_of_motor_up       (abs)        0000
__size_of_move_elevator  (abs)        0000
__size_of_printf         (abs)        0000
__size_of_putch          (abs)        0000
__size_of_system_init    (abs)        0000
__stringbase             strings      01C6
__stringtab              strings      01C1
_check_elevator          text6        019B
_floor_actual            bssBANK0     0029
_floor_desired           bssCOMMON    0077
_floor_last              bssBANK0     002A
_led_counter             bssBANK0     0026
_main                    maintext     0247
_motor_direction         bssCOMMON    0078
_motor_down              text4        01E5
_motor_stop              text5        022D
_motor_up                text3        0216
_move_elevator           text2        0166
_printf                  text7        01FE
_putch                   text8        023F
_system_init             text1        00F2
btemp                    (abs)        007E
end_of_initialization    cinit        001B
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
ltemp                    (abs)        007E
ltemp0                   (abs)        007E
ltemp1                   (abs)        0082
ltemp2                   (abs)        0086
ltemp3                   (abs)        0080
printf@ap                cstackBANK0  0022
printf@c                 cstackBANK0  0023
printf@f                 cstackBANK0  0024
putch@data               cstackBANK0  0020
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
stackhi                  (abs)        0000
stacklo                  (abs)        0000
start                    init         0010
start_initialization     cinit        0011
ttemp                    (abs)        007E
ttemp0                   (abs)        007E
ttemp1                   (abs)        0081
ttemp2                   (abs)        0084
ttemp3                   (abs)        0087
ttemp4                   (abs)        007F
wtemp                    (abs)        007E
wtemp0                   (abs)        007E
wtemp1                   (abs)        0080
wtemp2                   (abs)        0082
wtemp3                   (abs)        0084
wtemp4                   (abs)        0086
wtemp5                   (abs)        0088
wtemp6                   (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 77 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_check_elevator
		_move_elevator
		_system_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _system_init *****************
 Defined at:
		line 90 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       3       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _move_elevator *****************
 Defined at:
		line 208 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       2       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_down
		_motor_stop
		_motor_up
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_up *****************
 Defined at:
		line 160 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       2       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_motor_stop
 This function is called by:
		_move_elevator
 This function uses a non-reentrant model


 *************** function _motor_down *****************
 Defined at:
		line 179 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       2       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_motor_stop
 This function is called by:
		_move_elevator
 This function uses a non-reentrant model


 *************** function _motor_stop *****************
 Defined at:
		line 198 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       2       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_motor_up
		_motor_down
		_move_elevator
 This function uses a non-reentrant model


 *************** function _check_elevator *****************
 Defined at:
		line 244 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       1       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_printf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               1    wreg     PTR const unsigned char 
		 -> STR_3(10), STR_2(10), STR_1(10), 
 Auto vars:     Size  Location     Type
  f               1    4[BANK0 ] PTR const unsigned char 
		 -> STR_3(10), STR_2(10), STR_1(10), 
  tmpval          4    0        struct .
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    3[BANK0 ] char 
  ap              1    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2   58[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       3       0
      Temps:          0       1       0
      Totals:         0       4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_putch
 This function is called by:
		_check_elevator
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 275 in file "main.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       0       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 283 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          5       0       0
      Totals:         5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c
		_printf        		CODE           	01FE	0000	25

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c estimated size: 25

shared
		__stringtab    		STRING         	01C1	0000	7
		__initialization		CODE           	0011	0000	11

shared estimated size: 18

main.c
		_system_init   		CODE           	00F2	0000	117
		_check_elevator		CODE           	019B	0000	39
		_ISR           		CODE           	001D	0000	214
		_putch         		CODE           	023F	0000	9
		_motor_down    		CODE           	01E5	0000	26
		_main          		CODE           	0247	0000	5
		_motor_stop    		CODE           	022D	0000	19
		_move_elevator 		CODE           	0166	0000	54
		_motor_up      		CODE           	0216	0000	24

main.c estimated size: 507

